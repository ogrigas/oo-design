<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>

    <groupId>oo-design</groupId>
    <artifactId>oo-design</artifactId>
    <version>1.0-SNAPSHOT</version>

    <build>
        <finalName>oop</finalName>

        <plugins>
            <!--
                Compiler plugin is called by default when executing "mvn compile".
                But we explicitly declare this plugin here to configure it to use Java version 8.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--
                Surefire plugin is called by default when executing "mvn test".
                Here's how it can be configured to treat certain file names as tests.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--
                We use Shade plugin to create uberjar (single jar with all dependencies) when executing "mvn package".
                Uberjar will be created in target/oop.jar - filename is based on the <finalName> tag
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformers>
                        <!--
                            We specify our application's entry-point class to be declared inside META-INF/MANIFEST.MF
                            Its main() method will be called by Java runtime when executing "java -jar oop.jar"
                        -->
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>oo.EntryPoint</Main-Class>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Guava library has a bunch of useful utilities that are missing in JDK, like immutable collections -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>

        <!-- JUnit is the most popular unit-testing framework in Java -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- Hamcrest is a library of result matchers to be used in unit tests with assertThat() -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito is a mocking library (for tests) that can mock interactions with classes as well as interfaces -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.7.19</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
